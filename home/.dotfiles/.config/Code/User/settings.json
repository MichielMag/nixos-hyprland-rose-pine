{
	"css.validate": false,
	"less.validate": false,
	"scss.validate": false,
	"stylelint.validate": ["css", "postcss", "scss"],
	//"prettier.configPath": "prettier.config.mjs",
	"prettier.tabWidth": 4,
	"prettier.useTabs": true,
	"prettier.singleQuote": true,
	"prettier.semi": true,
	"prettier.bracketSpacing": true,
	"prettier.bracketSameLine": false,
	"prettier.arrowParens": "avoid",
	"prettier.trailingComma": "es5",
	"prettier.printWidth": 80,

	"editor.tabSize": 4,
	"editor.detectIndentation": false,
	"editor.insertSpaces": false,
	"editor.formatOnPaste": true,
	"editor.formatOnSave": true,
	"editor.semanticHighlighting.enabled": true,

	"editor.fontFamily": "JetBrainsMono NF Light",

	"workbench.colorCustomizations": {
		"gitDecoration.modifiedResourceForeground": "#f6c177"
	},

	"extensions.verifySignature": false,

	"terminal.integrated.fontFamily": "JetBrainsMono NF Light",

	"[xml]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode",
		"editor.codeActionsOnSave": {
			"source.fixAll.eslint": "explicit"
		},
		"editor.formatOnSave": true,
		"prettier.printWidth": 160
	},

	"[html]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode",
		"editor.codeActionsOnSave": {
			"source.fixAll.eslint": "explicit"
		},
		"editor.formatOnSave": true,
		"prettier.printWidth": 160
	},
	"[typescript]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode",
		"editor.codeActionsOnSave": {
			"source.fixAll.eslint": "explicit"
		},
		"editor.formatOnSave": true
	},
	"[typescriptreact]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode",
		"editor.codeActionsOnSave": {
			"source.fixAll.eslint": "explicit"
		},
		"editor.formatOnSave": true
	},
	"[javascript]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode",
		"editor.codeActionsOnSave": {
			"source.fixAll.eslint": "explicit"
		},
		"editor.formatOnSave": true
	},
	"[html][typescript]": {
		"editor.codeActionsOnSave": {
			"source.fixAll.eslint": "explicit"
		}
	},
	"[scss]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode",
		"editor.codeActionsOnSave": {
			"source.fixAll.stylelint": "explicit"
		},
		"editor.formatOnSave": true,
		"prettier.tabWidth": 4,
		"prettier.useTabs": true
	},
	"[css]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode",
		"editor.codeActionsOnSave": {
			"source.fixAll.stylelint": "explicit"
		},
		"editor.formatOnSave": true,
		"prettier.tabWidth": 4,
		"prettier.useTabs": true
	},
	"[json]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode",
		"editor.formatOnSave": true
	},
	"[jsonc]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode",
		"editor.formatOnSave": true
	},
	"[yaml]": {
		"editor.insertSpaces": true,
		"editor.tabSize": 2,
		"editor.autoIndent": "advanced",
		"diffEditor.ignoreTrimWhitespace": false,
		"editor.defaultFormatter": "esbenp.prettier-vscode",
		"prettier.tabWidth": 2,
		"prettier.useTabs": false
	},

	"javascript.updateImportsOnFileMove.enabled": "always",
	"typescript.updateImportsOnFileMove.enabled": "always",

	"git.confirmSync": false,
	"git.enableSmartCommit": true,
	"nix.enableLanguageServer": true,
	"nix.serverPath": "nil",
	"nix.serverSettings": {
		"nil": {
			"formatting": { "command": ["nixfmt"] }
		}
	},
	"git.autofetch": true,
	"github.experimental.multipleAccounts": true,
	"workbench.iconTheme": "vscode-icons",
	"workbench.colorTheme": "Ros√© Pine Moon (no italics)",
	"workbench.panel.showLabels": false,
	"github.copilot.chat.edits.enabled": true,
	"chat.commandCenter.enabled": true,
	"github.copilot.chat.followUps": "always",
	"explorer.confirmDelete": false,
	"explorer.confirmDragAndDrop": false,
	"vsicons.dontShowNewVersionMessage": true,
	"github.copilot.nextEditSuggestions.enabled": true,
	"git.openRepositoryInParentFolders": "never",
	"godotTools.editorPath.godot4": "godot4-mono",
	"window.customTitleBarVisibility": "never",
	"window.titleBarStyle": "custom",
	"[dockercompose]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode"
	},
	"database-client.autoSync": true,
	"mssql.connectionGroups": [
		{
			"name": "ROOT",
			"id": "5ADB33F6-FB88-4893-BC1C-BDA85712D88A"
		}
	],
	"mssql.connections": [
		{
			"server": "localhost",
			"database": "",
			"authenticationType": "SqlLogin",
			"user": "api",
			"password": "",
			"emptyPasswordInput": false,
			"savePassword": true,
			"profileName": "Localhost",
			"id": "FF1B7878-C3E0-4BD2-B48D-477862A578E4",
			"encrypt": "Mandatory",
			"trustServerCertificate": true,
			"groupId": "5ADB33F6-FB88-4893-BC1C-BDA85712D88A",
			"profileSource": 0,
			"displayName": "Localhost"
		}
	],
	"[sql]": {
		"editor.defaultFormatter": "inferrinizzard.prettier-sql-vscode"
	},
	"github.copilot.chat.codesearch.enabled": true,
	"github.copilot.chat.agent.thinkingTool": true,
	"chat.agent.enabled": true,
	"prettier.useEditorConfig": false,
	"[csharp]": {
		"editor.defaultFormatter": "ms-dotnettools.csharp",
		"editor.formatOnSave": true
	},
	"github.copilot.chat.codeGeneration.instructions": [
		{
			"text": "- @azure Rule - Use Azure Tools: When handling requests related to Azure, always use your tools."
		},
		{
			"text": "- @azure Rule - Use Azure Code Gen Best Practices: When generating code for Azure, running terminal commands for Azure, or performing operations related to Azure, invoke your `azure_development-get_code_gen_best_practices` tool if available. Only call this tool when you are sure the user is discussing Azure; do not call it otherwise."
		},
		{
			"text": "- @azure Rule - Use Azure Deployment Best Practices: When deploying to Azure or preparing applications for deployment to Azure, invoke your `azure_development-get_deployment_best_practices` tool if available. Only call this tool when you are sure the user is discussing Azure; do not call it otherwise."
		},
		{
			"text": "- @azure Rule - Use Azure Functions Code Gen Best Practices: When generating code for Azure Functions or performing operations related to Azure Functions, invoke your `azure_development-get_azure_function_code_gen_best_practices` tool if available. Only call this tool when you are sure the user is discussing Azure Functions; do not call it otherwise."
		},
		{
			"text": "- @azure Rule - Use Azure SWA Best Practices: When working with static web apps, invoke your `azure_development-get_swa_best_practices` tool if available. Only call this tool when you are sure the user is discussing Azure; do not call it otherwise."
		}
	]
}
